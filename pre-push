#!/bin/sh

# This git hook script is to create a code review entry on Crucible. Called by "git
# push" after it has checked the remote status, but before anything has been
# pushed. If this script exits with a non-zero status nothing will be pushed.
#
# This hook is called with the following parameters:
#
# $1 -- Name of the remote to which the push is being done
# $2 -- URL to which the push is being done
#
# If pushing without using a named remote those arguments will be equal.
#
# Information about the commits which are being pushed is supplied as lines to
# the standard input in the form:
#
#   <local ref> <local sha1> <remote ref> <remote sha1>
#

crucible_url="#HOST:PORT"
project_key="#PROJECT_KEY"
username="#USERNAME"
password="#PASSWORD"
reviewers="#COMMA_SEPERATED_USERNAMES"

remote="$1"
url="$2"

z40=0000000000000000000000000000000000000000

while read local_ref local_sha remote_ref remote_sha
do
	if [ "$local_sha" = $z40 ]
	then
		# Handle delete
		:
	else
		if [ "$remote_sha" = $z40 ]
		then
			# New branch, examine all commits
			range="$local_sha"
		else
			# Update to existing branch, examine new commits
			range="$remote_sha..$local_sha"
		fi
		
		# Get the diff from git
		commit_diff=`git diff "$range"`
		last_commit_message=`git log --format=%f -n 1 "$range"`
		all_commit_messages=`git log --format=%f "$range"`
		
		# Call Crucible for create a new review
		review_data='<?xml version="1.0" encoding="UTF-8" standalone="yes"?><createReview><reviewData><allowReviewersToJoin>true</allowReviewersToJoin><author><userName>'"$username"'</userName></author><creator><userName>'"$username"'</userName></creator><description>'"$all_commit_messages"'</description><moderator><userName>'"$username"'</userName></moderator><name>'"$last_commit_message"'</name><projectKey>'"$project_key"'</projectKey><state>Review</state><summary>'"$last_commit_message"'</summary><type>REVIEW</type></reviewData><patch>'"$commit_diff"'</patch></createReview>'
		create_review_response=`curl -i --user "$username:$password" -H "Content-Type: application/xml" -X POST --data "$review_data" "$crucible_url/rest-service/reviews-v1"`
		
		# Extract location of the review from response
		location_header=`echo "$create_review_response" | grep Location:`
		review_url=`echo ${location_header:9}`
		
		# Add reviewers to the review
		add_reviewers_response=`curl -i --user "$username:$password" -H "Content-Type: application/json" -X POST "$review_url/reviewers" --data "$reviewers"`
		
	fi
done

exit 0
